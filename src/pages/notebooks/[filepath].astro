---
const { filepath } = Astro.params;

let notFound = true;
let notebookTitle = "";
let notebookHTML = "";

const metadataResponse = await fetch(`https://api.github.com/repos/saphalpdyl/${import.meta.env.PUBLIC_NOTEBOOK_REPOSITORY}/contents/metadata.json`, {
  headers: {
    "Accept": "application/vnd.github.v3.raw", // To get raw data instead of base64 encoded data
    "Authorization": `Bearer ${import.meta.env.GITHUB_API_KEY}`,
  },
});

const metadata: NotebookMetadata = await metadataResponse.json()

if (metadata && metadata.data) {
  const kaggleGroup = metadata.data.find(group => group.group === import.meta.env.PUBLIC_NOTEBOOK_GCMS_GROUP);
  if (kaggleGroup) {
    const thisNotebook = kaggleGroup.files?.find(file => file.filepath === filepath)


    if (thisNotebook)
      notebookTitle = thisNotebook.metadata["title"]
  }

}

const notebookResponse = await fetch(`https://api.github.com/repos/saphalpdyl/kaggle_notebooks/contents/${filepath}`, {
  headers: {
    "Accept": "application/vnd.github.v3.raw",
    "Authorization": `Bearer ${import.meta.env.GITHUB_API_KEY}`,
  }
});

if (notebookResponse.status < 300) {
  notebookHTML = await notebookResponse.text()
  notFound = false;
}

---

<html>
  <head>
    <meta charset="utf-8" />
  </head>
  <body class="p-0">
    <div>
    {
      notFound ? (
        <div class="h-screen w-screen flex flex-col justify-center items-center gap-2">
          <span class="text-4xl font-bold">404. Not Found.</span>
          <span class="text-xs text-gray-500">
            No Notebooks to be found here.
            <a href="/" aria-label="Go back" class="underline cursor-pointer">Go back</a>
          </span>
        </div>
      ) : (
        <a href="/" class="fixed text-white hover:text-white font-bold h-12 w-20 opacity-80 hover:opacity-100 cursor-pointer bg-slate-900 rounded-r-md top-1/2 -translate-y-1/2 -left-2 flex justify-center items-center z-[40]">
          Go back
        </a>
        <div class="fixed bg-white/50 w-full backdrop-blur-sm">
          <div class="pl-16">
            <span class="text-3xl font-bold">{ notebookTitle }</span>
            <p class="font-serif">Created by Saphal K. Poudyal</p>
          </div>
          <hr class="mt-2">
        </div>

        <div>
          <div id="table-of-contents" class="max-h-[50rem] w-48 lg:w-60 fixed px-5 bg-black/60 top-1/2 -translate-y-1/2 right-0 backdrop-blur-sm rounded-lg"></div>
        </div>

        <div class="h-20"></div>
        <Fragment set:html={notebookHTML} />
      )
    }

    </div>

    <script>
      function generateTableOfContents() {
          // Get the container
          const toc = document.getElementById('table-of-contents');
          
          // Get all H1 and H2 elements
          const headings = document.querySelectorAll('h1, h2');
          
          headings.forEach(heading => {
              // Create an id for the heading if it doesn't have one
              if (!heading.id) {
                  heading.id = heading.textContent!
                      .toLowerCase()
                      .replace(/[^a-z0-9]+/g, '-');
              }
              
              const link = document.createElement('a');
              link.href = `#${heading.id}`;
              link.textContent = heading.textContent;
              
              // Style based on heading level
              if (heading.tagName === 'H1') {
                  link.className = 'block py-2 text-gray-300 hover:text-white transition-colors duration-200 font-bold';
              } else {
                  link.className = 'block py-2 pl-4 text-gray-400 hover:text-white transition-colors duration-200 text-xs';
              }
              
              // Add smooth scroll behavior
              link.addEventListener('click', (e) => {
                  e.preventDefault();
                  document.getElementById(heading.id)!.scrollIntoView({
                      behavior: 'smooth'
                  });
              });
              
              toc!.appendChild(link);
          });
          
          // Optional: Add active state for current section
          window.addEventListener('scroll', () => {
              headings.forEach(heading => {
                  const link = toc!.querySelector(`a[href="#${heading.id}"]`);
                  const section = heading.getBoundingClientRect();
                  
                  if (section.top <= 100 && section.bottom >= 100) {
                      link!.classList.add('text-white', 'font-medium');
                  } else {
                      link!.classList.remove('text-white', 'font-medium');
                  }
              });
          });
      }

      document.addEventListener('DOMContentLoaded', generateTableOfContents);
    </script>
  </body>
</html>